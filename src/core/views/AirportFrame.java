/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import airport.Flight;
import airport.Location;
import airport.Passenger;
import airport.Plane;
import com.formdev.flatlaf.FlatDarkLaf;
import core.controllers.AvionController;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import core.controllers.PasajeroController;
import core.controllers.utils.Response;
import core.models.Pasajero;
import core.controllers.utils.Status;
import core.models.Avion;
import core.models.storage.BaseDatosSimulada;
import core.services.ServicioAviones;
import core.services.ServicioPasajeros;
import java.time.DateTimeException;

/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;

    public AirportFrame() {
        initComponents();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                jTabbedPane1.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 0; i < 13; i++) {
            cmb_Month_Birthdate_Passenger_Registration_.addItem("" + i);
            cmb_Month_Departure_Date_Flight_Registration_.addItem("" + i);
            MONTH5.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            cmb_Day_Birthdate_Passenger_Registration_.addItem("" + i);
            cmb_Day_Departure_Date_Flight_Registration_.addItem("" + i);
            DAY5.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            cmb_Hour_Departure_Date_Flight_Registration_.addItem("" + i);
            cmb_Hour_Duration_Flight_Registration_.addItem("" + i);
            MONTH4.addItem("" + i);
            cmb_Hour_Delay_Flight_.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            cmb_Minute_Departure_Date_Flight_Registration_.addItem("" + i);
            cmb_Minute_Duration_Flight_Registration_.addItem("" + i);
            DAY4.addItem("" + i);
            cmb_Minute_Delay_Flight_.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new airport.PanelRound();
        panelRound2 = new airport.PanelRound();
        jButton13 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        lbl_Country_Passenger_Registartion_ = new javax.swing.JLabel();
        lbl_ID_Passenger_Registration_ = new javax.swing.JLabel();
        lbl_First_Name_Passenger_Registration_ = new javax.swing.JLabel();
        lbl_Last_Name_Passenger_Registration_ = new javax.swing.JLabel();
        lbl_Birthdate_Passenger_Registration_ = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_Phone_Code_Passenger_Registration_ = new javax.swing.JTextField();
        txt_ID_Passenger_Registration_ = new javax.swing.JTextField();
        txt_Birthdate_Passenger_Registration_ = new javax.swing.JTextField();
        txt_Country_Passenger_Registration_ = new javax.swing.JTextField();
        txt_Phone_Passenger_Registration_ = new javax.swing.JTextField();
        lbl_Phone_Passenger_Registration_ = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_Last_Name_Passenger_Registartion_ = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmb_Month_Birthdate_Passenger_Registration_ = new javax.swing.JComboBox<>();
        txt_First_Name__Passenger_Registration_ = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmb_Day_Birthdate_Passenger_Registration_ = new javax.swing.JComboBox<>();
        btn_Passenger_Registration_ = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lbl_ID_Airplane_Registration_ = new javax.swing.JLabel();
        txt_ID_Airplane_Registration_ = new javax.swing.JTextField();
        lbl_Brand_Airplane_Registration_ = new javax.swing.JLabel();
        txt_Brand_Airplane_Registration_ = new javax.swing.JTextField();
        txt_Model_Airplane_Registration_ = new javax.swing.JTextField();
        lbl_Model_Airplane_Registration_ = new javax.swing.JLabel();
        txt_Max_Capacity_Airplane_Registration_ = new javax.swing.JTextField();
        lbl_Max_Capacity_Airplane_Registration_ = new javax.swing.JLabel();
        txt_Airline_Airplane_Registration_ = new javax.swing.JTextField();
        lbl_Airline_Airplane_Registration_ = new javax.swing.JLabel();
        btn_Airplane_Registration_ = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        lbl_Airport_ID_Location_Registration_ = new javax.swing.JLabel();
        txt_Airport_ID_Location_Registration_ = new javax.swing.JTextField();
        lbl_Airport_Name_Location_Registration_ = new javax.swing.JLabel();
        txt_Airport_Name_Location_Registration_ = new javax.swing.JTextField();
        txt_Airport_City_Location_Registration_ = new javax.swing.JTextField();
        lbl_Airport_City_Local_Registration_ = new javax.swing.JLabel();
        lbl_Airport_Country_Location_Rgistration_ = new javax.swing.JLabel();
        txt_Airport_Country_Location_Registration_ = new javax.swing.JTextField();
        txt_Airport_Latitude_Location_Registration_ = new javax.swing.JTextField();
        lbl_Airport_Latitude_Flight_Registration_ = new javax.swing.JLabel();
        lbl_Airport_Longitude_Location_Registration_ = new javax.swing.JLabel();
        txt_Airport_Longitude_Location_Registration_ = new javax.swing.JTextField();
        btn_Location_Registration_ = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lbl_ID_Flight_Registration_ = new javax.swing.JLabel();
        txt_ID_Flight_Registration_ = new javax.swing.JTextField();
        lbl_Plane_Flight_Registration_ = new javax.swing.JLabel();
        cmb_Plane_Flight_Registration_ = new javax.swing.JComboBox<>();
        cmb_Departure_Location_Flight_Registration_ = new javax.swing.JComboBox<>();
        lbl_Departure_Location_Flight_Registration_ = new javax.swing.JLabel();
        cmb_Arrive_Location_Flight_Registration_ = new javax.swing.JComboBox<>();
        lbl_Arrive_Location_Flight_Registration_ = new javax.swing.JLabel();
        lbl_Scale_Location_Flight_Registration_ = new javax.swing.JLabel();
        cmb_Scale_Location_Flight_Registration_ = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        lbl_Duration_Flight_Registration_ = new javax.swing.JLabel();
        lbl_Departure_Date_Flight_Registration_ = new javax.swing.JLabel();
        txt_AÃ±o_Departure_Date_Flight_Registration_ = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        cmb_Month_Departure_Date_Flight_Registration_ = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        cmb_Day_Departure_Date_Flight_Registration_ = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        cmb_Hour_Departure_Date_Flight_Registration_ = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        cmb_Minute_Departure_Date_Flight_Registration_ = new javax.swing.JComboBox<>();
        cmb_Hour_Duration_Flight_Registration_ = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        cmb_Minute_Duration_Flight_Registration_ = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        MONTH4 = new javax.swing.JComboBox<>();
        DAY4 = new javax.swing.JComboBox<>();
        btn_Flight_Registration_ = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        lbl_ID_Update_ = new javax.swing.JLabel();
        txt_ID_Update_ = new javax.swing.JTextField();
        lbl_First_Name_Update_ = new javax.swing.JLabel();
        txt_First_Name_Update_ = new javax.swing.JTextField();
        lbl_Last_Name_Update_ = new javax.swing.JLabel();
        txt_Last_Name_Update_ = new javax.swing.JTextField();
        lbl_Birthdate_Update_ = new javax.swing.JLabel();
        txt_Birthdate_Update_ = new javax.swing.JTextField();
        MONTH5 = new javax.swing.JComboBox<>();
        DAY5 = new javax.swing.JComboBox<>();
        txt_Numero_de_Telefono_Update_ = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txt_Codigo_de_Pais_Update_ = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        lbl_Phone_Update_ = new javax.swing.JLabel();
        lbl_Country_Update_ = new javax.swing.JLabel();
        txt_Country_Update_ = new javax.swing.JTextField();
        btn_Update_Info_ = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        txt_ID_Add_to_Flight_ = new javax.swing.JTextField();
        lbl_ID_Add_to_Flight_ = new javax.swing.JLabel();
        lbl_Flight_Add_to_Flight_ = new javax.swing.JLabel();
        cmb_Flight_Add_to_Flight_ = new javax.swing.JComboBox<>();
        btn_Add_Passenger_Flight_ = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Lista_Vuelos_Show_my_Flights_ = new javax.swing.JTable();
        btn_Refresh_My_Flights_ = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Passengers_List_Show_all_Passemgers_ = new javax.swing.JTable();
        btn_Refresh_Passengers_List_ = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_Lista_Vuelos_Show_all_Flights_ = new javax.swing.JTable();
        btn_Refresh_All_Flights_List_ = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        btn_Refresh_Planes_List_ = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_Lista_Aviones_Show_all_Planes_ = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_Ubicaciones_Show_all_Locations_ = new javax.swing.JTable();
        btn_Refresh_All_Locations_List_ = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        cmb_Hour_Delay_Flight_ = new javax.swing.JComboBox<>();
        lbl_Hours_Delay_Flight_ = new javax.swing.JLabel();
        lbl_ID_Delay_Flight_ = new javax.swing.JLabel();
        cmb_ID_Delay_Flight_ = new javax.swing.JComboBox<>();
        lbl_Minutes_Delay_Flight_ = new javax.swing.JLabel();
        cmb_Minute_Delay_Flight_ = new javax.swing.JComboBox<>();
        btn_Delay_Flight_ = new javax.swing.JButton();
        panelRound3 = new airport.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        jTabbedPane1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jPanel1.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        jPanel1.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        jPanel1.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        jTabbedPane1.addTab("Administration", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_Country_Passenger_Registartion_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Country_Passenger_Registartion_.setText("Country:");
        jPanel2.add(lbl_Country_Passenger_Registartion_, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        lbl_ID_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_ID_Passenger_Registration_.setText("ID:");
        jPanel2.add(lbl_ID_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        lbl_First_Name_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_First_Name_Passenger_Registration_.setText("First Name:");
        jPanel2.add(lbl_First_Name_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        lbl_Last_Name_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Last_Name_Passenger_Registration_.setText("Last Name:");
        jPanel2.add(lbl_Last_Name_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        lbl_Birthdate_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Birthdate_Passenger_Registration_.setText("Birthdate:");
        jPanel2.add(lbl_Birthdate_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel6.setText("+");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        txt_Phone_Code_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_Phone_Code_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        txt_ID_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_ID_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        txt_Birthdate_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_Birthdate_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        txt_Country_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_Country_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        txt_Phone_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_Phone_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        lbl_Phone_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Phone_Passenger_Registration_.setText("Phone:");
        jPanel2.add(lbl_Phone_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel8.setText("-");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        txt_Last_Name_Passenger_Registartion_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_Last_Name_Passenger_Registartion_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel9.setText("-");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        cmb_Month_Birthdate_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Month_Birthdate_Passenger_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        jPanel2.add(cmb_Month_Birthdate_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        txt_First_Name__Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel2.add(txt_First_Name__Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel10.setText("-");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        cmb_Day_Birthdate_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Day_Birthdate_Passenger_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        jPanel2.add(cmb_Day_Birthdate_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        btn_Passenger_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Passenger_Registration_.setText("Register");
        btn_Passenger_Registration_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Passenger_Registration_ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_Passenger_Registration_, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        jTabbedPane1.addTab("Passenger registration", jPanel2);

        jPanel3.setLayout(null);

        lbl_ID_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_ID_Airplane_Registration_.setText("ID:");
        jPanel3.add(lbl_ID_Airplane_Registration_);
        lbl_ID_Airplane_Registration_.setBounds(53, 96, 22, 25);

        txt_ID_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel3.add(txt_ID_Airplane_Registration_);
        txt_ID_Airplane_Registration_.setBounds(180, 93, 130, 31);

        lbl_Brand_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Brand_Airplane_Registration_.setText("Brand:");
        jPanel3.add(lbl_Brand_Airplane_Registration_);
        lbl_Brand_Airplane_Registration_.setBounds(53, 157, 50, 25);

        txt_Brand_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel3.add(txt_Brand_Airplane_Registration_);
        txt_Brand_Airplane_Registration_.setBounds(180, 154, 130, 31);

        txt_Model_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel3.add(txt_Model_Airplane_Registration_);
        txt_Model_Airplane_Registration_.setBounds(180, 213, 130, 31);

        lbl_Model_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Model_Airplane_Registration_.setText("Model:");
        jPanel3.add(lbl_Model_Airplane_Registration_);
        lbl_Model_Airplane_Registration_.setBounds(53, 216, 55, 25);

        txt_Max_Capacity_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel3.add(txt_Max_Capacity_Airplane_Registration_);
        txt_Max_Capacity_Airplane_Registration_.setBounds(180, 273, 130, 31);

        lbl_Max_Capacity_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Max_Capacity_Airplane_Registration_.setText("Max Capacity:");
        jPanel3.add(lbl_Max_Capacity_Airplane_Registration_);
        lbl_Max_Capacity_Airplane_Registration_.setBounds(53, 276, 109, 25);

        txt_Airline_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanel3.add(txt_Airline_Airplane_Registration_);
        txt_Airline_Airplane_Registration_.setBounds(180, 333, 130, 31);

        lbl_Airline_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airline_Airplane_Registration_.setText("Airline:");
        jPanel3.add(lbl_Airline_Airplane_Registration_);
        lbl_Airline_Airplane_Registration_.setBounds(53, 336, 70, 25);

        btn_Airplane_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Airplane_Registration_.setText("Create");
        btn_Airplane_Registration_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Airplane_Registration_ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_Airplane_Registration_);
        btn_Airplane_Registration_.setBounds(490, 480, 120, 40);

        jTabbedPane1.addTab("Airplane registration", jPanel3);

        lbl_Airport_ID_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airport_ID_Location_Registration_.setText("Airport ID:");

        txt_Airport_ID_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_Airport_Name_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airport_Name_Location_Registration_.setText("Airport name:");

        txt_Airport_Name_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        txt_Airport_City_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_Airport_City_Local_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airport_City_Local_Registration_.setText("Airport city:");

        lbl_Airport_Country_Location_Rgistration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airport_Country_Location_Rgistration_.setText("Airport country:");

        txt_Airport_Country_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        txt_Airport_Latitude_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_Airport_Latitude_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airport_Latitude_Flight_Registration_.setText("Airport latitude:");

        lbl_Airport_Longitude_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Airport_Longitude_Location_Registration_.setText("Airport longitude:");

        txt_Airport_Longitude_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        btn_Location_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Location_Registration_.setText("Create");
        btn_Location_Registration_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Location_Registration_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Airport_ID_Location_Registration_)
                            .addComponent(lbl_Airport_Name_Location_Registration_)
                            .addComponent(lbl_Airport_City_Local_Registration_)
                            .addComponent(lbl_Airport_Country_Location_Rgistration_)
                            .addComponent(lbl_Airport_Latitude_Flight_Registration_)
                            .addComponent(lbl_Airport_Longitude_Location_Registration_))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Airport_Longitude_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Airport_ID_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Airport_Name_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Airport_City_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Airport_Country_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Airport_Latitude_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(btn_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(lbl_Airport_ID_Location_Registration_)
                        .addGap(36, 36, 36)
                        .addComponent(lbl_Airport_Name_Location_Registration_)
                        .addGap(34, 34, 34)
                        .addComponent(lbl_Airport_City_Local_Registration_)
                        .addGap(35, 35, 35)
                        .addComponent(lbl_Airport_Country_Location_Rgistration_)
                        .addGap(35, 35, 35)
                        .addComponent(lbl_Airport_Latitude_Flight_Registration_))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(txt_Airport_ID_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txt_Airport_Name_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txt_Airport_City_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txt_Airport_Country_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txt_Airport_Latitude_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Airport_Longitude_Location_Registration_)
                    .addComponent(txt_Airport_Longitude_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(btn_Location_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        jTabbedPane1.addTab("Location registration", jPanel13);

        lbl_ID_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_ID_Flight_Registration_.setText("ID:");

        txt_ID_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_Plane_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Plane_Flight_Registration_.setText("Plane:");

        cmb_Plane_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Plane_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        cmb_Departure_Location_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Departure_Location_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        lbl_Departure_Location_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Departure_Location_Flight_Registration_.setText("Departure location:");

        cmb_Arrive_Location_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Arrive_Location_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        lbl_Arrive_Location_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Arrive_Location_Flight_Registration_.setText("Arrival location:");

        lbl_Scale_Location_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Scale_Location_Flight_Registration_.setText("Scale location:");

        cmb_Scale_Location_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Scale_Location_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel27.setText("Duration:");

        lbl_Duration_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Duration_Flight_Registration_.setText("Duration:");

        lbl_Departure_Date_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Departure_Date_Flight_Registration_.setText("Departure date:");

        txt_AÃ±o_Departure_Date_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel30.setText("-");

        cmb_Month_Departure_Date_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Month_Departure_Date_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel31.setText("-");

        cmb_Day_Departure_Date_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Day_Departure_Date_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel32.setText("-");

        cmb_Hour_Departure_Date_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Hour_Departure_Date_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel33.setText("-");

        cmb_Minute_Departure_Date_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Minute_Departure_Date_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        cmb_Hour_Duration_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Hour_Duration_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel34.setText("-");

        cmb_Minute_Duration_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Minute_Duration_Flight_Registration_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel35.setText("-");

        MONTH4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTH4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        DAY4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAY4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        btn_Flight_Registration_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Flight_Registration_.setText("Create");
        btn_Flight_Registration_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Flight_Registration_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbl_Scale_Location_Flight_Registration_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmb_Scale_Location_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(lbl_Arrive_Location_Flight_Registration_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmb_Arrive_Location_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lbl_Departure_Location_Flight_Registration_)
                        .addGap(46, 46, 46)
                        .addComponent(cmb_Departure_Location_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_ID_Flight_Registration_)
                            .addComponent(lbl_Plane_Flight_Registration_))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_ID_Flight_Registration_)
                            .addComponent(cmb_Plane_Flight_Registration_, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(lbl_Duration_Flight_Registration_)
                    .addComponent(lbl_Departure_Date_Flight_Registration_))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txt_AÃ±o_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cmb_Month_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cmb_Day_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cmb_Hour_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cmb_Minute_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(cmb_Hour_Duration_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(cmb_Minute_Duration_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(MONTH4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(DAY4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbl_ID_Flight_Registration_))
                    .addComponent(txt_ID_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Plane_Flight_Registration_)
                    .addComponent(cmb_Plane_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_Hour_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(cmb_Minute_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_Departure_Location_Flight_Registration_)
                                .addComponent(cmb_Departure_Location_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_Departure_Date_Flight_Registration_))
                            .addComponent(txt_AÃ±o_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_Month_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(cmb_Day_Departure_Date_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_Arrive_Location_Flight_Registration_)
                                .addComponent(cmb_Arrive_Location_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_Duration_Flight_Registration_))
                            .addComponent(cmb_Hour_Duration_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(cmb_Minute_Duration_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MONTH4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(DAY4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_Scale_Location_Flight_Registration_)
                                .addComponent(cmb_Scale_Location_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(btn_Flight_Registration_, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("Flight registration", jPanel4);

        lbl_ID_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_ID_Update_.setText("ID:");

        txt_ID_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_First_Name_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_First_Name_Update_.setText("First Name:");

        txt_First_Name_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_Last_Name_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Last_Name_Update_.setText("Last Name:");

        txt_Last_Name_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        lbl_Birthdate_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Birthdate_Update_.setText("Birthdate:");

        txt_Birthdate_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        MONTH5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTH5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        DAY5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAY5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        txt_Numero_de_Telefono_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel40.setText("-");

        txt_Codigo_de_Pais_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel41.setText("+");

        lbl_Phone_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Phone_Update_.setText("Phone:");

        lbl_Country_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Country_Update_.setText("Country:");

        txt_Country_Update_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        btn_Update_Info_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Update_Info_.setText("Update");
        btn_Update_Info_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Update_Info_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbl_ID_Update_)
                                .addGap(108, 108, 108)
                                .addComponent(txt_ID_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbl_First_Name_Update_)
                                .addGap(41, 41, 41)
                                .addComponent(txt_First_Name_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbl_Last_Name_Update_)
                                .addGap(43, 43, 43)
                                .addComponent(txt_Last_Name_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbl_Birthdate_Update_)
                                .addGap(55, 55, 55)
                                .addComponent(txt_Birthdate_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(MONTH5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(DAY5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbl_Phone_Update_)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_Codigo_de_Pais_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txt_Numero_de_Telefono_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbl_Country_Update_)
                                .addGap(63, 63, 63)
                                .addComponent(txt_Country_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(btn_Update_Info_)))
                .addContainerGap(586, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_ID_Update_)
                    .addComponent(txt_ID_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_First_Name_Update_)
                    .addComponent(txt_First_Name_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Last_Name_Update_)
                    .addComponent(txt_Last_Name_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Birthdate_Update_)
                    .addComponent(txt_Birthdate_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MONTH5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAY5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Phone_Update_)
                    .addComponent(jLabel41)
                    .addComponent(txt_Codigo_de_Pais_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(txt_Numero_de_Telefono_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Country_Update_)
                    .addComponent(txt_Country_Update_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(btn_Update_Info_)
                .addGap(113, 113, 113))
        );

        jTabbedPane1.addTab("Update info", jPanel5);

        txt_ID_Add_to_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txt_ID_Add_to_Flight_.setEnabled(false);

        lbl_ID_Add_to_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_ID_Add_to_Flight_.setText("ID:");

        lbl_Flight_Add_to_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Flight_Add_to_Flight_.setText("Flight:");

        cmb_Flight_Add_to_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Flight_Add_to_Flight_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        btn_Add_Passenger_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Add_Passenger_Flight_.setText("Add");
        btn_Add_Passenger_Flight_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Add_Passenger_Flight_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_ID_Add_to_Flight_)
                    .addComponent(lbl_Flight_Add_to_Flight_))
                .addGap(79, 79, 79)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_Flight_Add_to_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ID_Add_to_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(860, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Add_Passenger_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lbl_ID_Add_to_Flight_))
                    .addComponent(txt_ID_Add_to_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Flight_Add_to_Flight_)
                    .addComponent(cmb_Flight_Add_to_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(btn_Add_Passenger_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        jTabbedPane1.addTab("Add to flight", jPanel6);

        tbl_Lista_Vuelos_Show_my_Flights_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tbl_Lista_Vuelos_Show_my_Flights_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_Lista_Vuelos_Show_my_Flights_);

        btn_Refresh_My_Flights_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Refresh_My_Flights_.setText("Refresh");
        btn_Refresh_My_Flights_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh_My_Flights_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(322, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Refresh_My_Flights_)
                .addGap(527, 527, 527))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btn_Refresh_My_Flights_)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show my flights", jPanel7);

        tbl_Passengers_List_Show_all_Passemgers_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tbl_Passengers_List_Show_all_Passemgers_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_Passengers_List_Show_all_Passemgers_);

        btn_Refresh_Passengers_List_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Refresh_Passengers_List_.setText("Refresh");
        btn_Refresh_Passengers_List_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh_Passengers_List_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(btn_Refresh_Passengers_List_))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Refresh_Passengers_List_)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show all passengers", jPanel8);

        tbl_Lista_Vuelos_Show_all_Flights_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tbl_Lista_Vuelos_Show_all_Flights_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl_Lista_Vuelos_Show_all_Flights_);

        btn_Refresh_All_Flights_List_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Refresh_All_Flights_List_.setText("Refresh");
        btn_Refresh_All_Flights_List_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh_All_Flights_List_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(btn_Refresh_All_Flights_List_)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Refresh_All_Flights_List_)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Show all flights", jPanel9);

        btn_Refresh_Planes_List_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Refresh_Planes_List_.setText("Refresh");
        btn_Refresh_Planes_List_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh_Planes_List_ActionPerformed(evt);
            }
        });

        tbl_Lista_Aviones_Show_all_Planes_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbl_Lista_Aviones_Show_all_Planes_);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btn_Refresh_Planes_List_))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btn_Refresh_Planes_List_)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all planes", jPanel10);

        tbl_Ubicaciones_Show_all_Locations_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbl_Ubicaciones_Show_all_Locations_);

        btn_Refresh_All_Locations_List_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Refresh_All_Locations_List_.setText("Refresh");
        btn_Refresh_All_Locations_List_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Refresh_All_Locations_List_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btn_Refresh_All_Locations_List_))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btn_Refresh_All_Locations_List_)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all locations", jPanel11);

        cmb_Hour_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Hour_Delay_Flight_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        lbl_Hours_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Hours_Delay_Flight_.setText("Hours:");

        lbl_ID_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_ID_Delay_Flight_.setText("ID:");

        cmb_ID_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_ID_Delay_Flight_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        lbl_Minutes_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lbl_Minutes_Delay_Flight_.setText("Minutes:");

        cmb_Minute_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cmb_Minute_Delay_Flight_.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        btn_Delay_Flight_.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btn_Delay_Flight_.setText("Delay");
        btn_Delay_Flight_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Delay_Flight_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(lbl_Minutes_Delay_Flight_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmb_Minute_Delay_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_ID_Delay_Flight_)
                            .addComponent(lbl_Hours_Delay_Flight_))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_Hour_Delay_Flight_, 0, 136, Short.MAX_VALUE)
                            .addComponent(cmb_ID_Delay_Flight_, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Delay_Flight_)
                .addGap(531, 531, 531))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_ID_Delay_Flight_)
                    .addComponent(cmb_ID_Delay_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Hours_Delay_Flight_)
                    .addComponent(cmb_Hour_Delay_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Minutes_Delay_Flight_)
                    .addComponent(cmb_Minute_Delay_Flight_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(btn_Delay_Flight_)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Delay flight", jPanel12);

        panelRound1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
                jTabbedPane1.setEnabledAt(i, true);
        }
        jTabbedPane1.setEnabledAt(5, false);
        jTabbedPane1.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {

            jTabbedPane1.setEnabledAt(i, false);

        }
        jTabbedPane1.setEnabledAt(9, true);
        jTabbedPane1.setEnabledAt(5, true);
        jTabbedPane1.setEnabledAt(6, true);
        jTabbedPane1.setEnabledAt(7, true);
        jTabbedPane1.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void btn_Passenger_Registration_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Passenger_Registration_ActionPerformed
        try {
        // 1. Recolectar datos del formulario (conversiÃ³n bÃ¡sica)
        long id = Long.parseLong(txt_ID_Passenger_Registration_.getText());
        String nombre = txt_First_Name__Passenger_Registration_.getText();
        String apellido = txt_Last_Name_Passenger_Registartion_.getText();
        int aÃ±o = Integer.parseInt(txt_Birthdate_Passenger_Registration_.getText());
        int mes = cmb_Month_Birthdate_Passenger_Registration_.getSelectedIndex() - 1; 
        int dia = Integer.parseInt(cmb_Day_Birthdate_Passenger_Registration_.getItemAt(cmb_Day_Birthdate_Passenger_Registration_.getSelectedIndex()));
        int codigoPais = Integer.parseInt(txt_Phone_Code_Passenger_Registration_.getText());
        long telefono = Long.parseLong(txt_Phone_Passenger_Registration_.getText());
        String pais = txt_Country_Passenger_Registration_.getText();

        LocalDate fechaNacimiento = LocalDate.of(aÃ±o, mes, dia);
        Pasajero nuevoPasajero = new Pasajero(id, nombre, apellido, fechaNacimiento, codigoPais, telefono, pais);

        PasajeroController controller = PasajeroController.getInstance(
            new ServicioPasajeros(BaseDatosSimulada.getInstance())
        );

        Response<Pasajero> response = controller.registrarPasajero(nuevoPasajero);

        if (response.getCodigo() == 201) { 
            JOptionPane.showMessageDialog(null, "Pasajero registrado exitosamente", "Ãxito", JOptionPane.INFORMATION_MESSAGE);
            limpiarCamposRegistro();
            userSelect.addItem(String.valueOf(id)); 
        } else {
            JOptionPane.showMessageDialog(null, response.getMensaje(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Verifique los campos numÃ©ricos (ID, telÃ©fono, cÃ³digo)", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DateTimeException e) {
            JOptionPane.showMessageDialog(null, "Fecha invÃ¡lida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_Passenger_Registration_ActionPerformed
    
    private void limpiarCamposRegistro() {
    txt_ID_Passenger_Registration_.setText("");
    txt_First_Name__Passenger_Registration_.setText("");
    txt_Last_Name_Passenger_Registartion_.setText("");
    txt_Birthdate_Passenger_Registration_.setText("");
    cmb_Month_Birthdate_Passenger_Registration_.setSelectedIndex(0);
    cmb_Day_Birthdate_Passenger_Registration_.setSelectedIndex(0);
    txt_Phone_Code_Passenger_Registration_.setText("");
    txt_Phone_Passenger_Registration_.setText("");
    txt_Country_Passenger_Registration_.setText("");
    }
    
    private void btn_Airplane_Registration_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Airplane_Registration_ActionPerformed
        // TODO add your handling code here:
        try {
        // 1. Recolectar datos del formulario
        long id = Long.parseLong(txt_ID_Airplane_Registration_.getText());
        String marca = txt_Brand_Airplane_Registration_.getText();
        String modelo = txt_Model_Airplane_Registration_.getText();
        int capacidadMaxima = Integer.parseInt(txt_Max_Capacity_Airplane_Registration_.getText());
        String aerolinea = txt_Airline_Airplane_Registration_.getText();

        // 2. Crear objeto Avion
        Avion nuevoAvion = new Avion(id, marca, modelo, capacidadMaxima, aerolinea);

        // 3. Obtener controlador (similar al de pasajeros)
        AvionController controller = AvionController.getInstance(
            new ServicioAviones(BaseDatosSimulada.getInstance())
        );

        // 4. Registrar aviÃ³n
        Response<Avion> response = controller.registrarAvion(nuevoAvion);

        // 5. Manejar respuesta
        if (response.getCodigo() == 201) { 
            JOptionPane.showMessageDialog(this, "AviÃ³n registrado exitosamente", "Ãxito", JOptionPane.INFORMATION_MESSAGE);
            limpiarCamposAvion();
            //cmb_Plane_Flight_Registration_.addItem(id); // Actualizar combobox
        } else {
            JOptionPane.showMessageDialog(this, response.getMensaje(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La capacidad mÃ¡xima debe ser un nÃºmero vÃ¡lido", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_Airplane_Registration_ActionPerformed

    private void limpiarCamposAvion() {
    txt_ID_Airplane_Registration_.setText("");
    txt_Brand_Airplane_Registration_.setText("");
    txt_Model_Airplane_Registration_.setText("");
    txt_Max_Capacity_Airplane_Registration_.setText("");
    txt_Airline_Airplane_Registration_.setText("");
}
    
    private void btn_Location_Registration_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Location_Registration_ActionPerformed
        // TODO add your handling code here:
        String id = txt_Airport_ID_Location_Registration_.getText();
        String name = txt_Airport_Name_Location_Registration_.getText();
        String city = txt_Airport_City_Location_Registration_.getText();
        String country = txt_Airport_Country_Location_Registration_.getText();
        double latitude = Double.parseDouble(txt_Airport_Latitude_Location_Registration_.getText());
        double longitude = Double.parseDouble(txt_Airport_Longitude_Location_Registration_.getText());

        this.locations.add(new Location(id, name, city, country, latitude, longitude));

        this.cmb_Departure_Location_Flight_Registration_.addItem(id);
        this.cmb_Arrive_Location_Flight_Registration_.addItem(id);
        this.cmb_Scale_Location_Flight_Registration_.addItem(id);
    }//GEN-LAST:event_btn_Location_Registration_ActionPerformed

    private void btn_Flight_Registration_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Flight_Registration_ActionPerformed
        // TODO add your handling code here:
        String id = txt_ID_Flight_Registration_.getText();
        String planeId = cmb_Plane_Flight_Registration_.getItemAt(cmb_Plane_Flight_Registration_.getSelectedIndex());
        String departureLocationId = cmb_Departure_Location_Flight_Registration_.getItemAt(cmb_Departure_Location_Flight_Registration_.getSelectedIndex());
        String arrivalLocationId = cmb_Arrive_Location_Flight_Registration_.getItemAt(cmb_Arrive_Location_Flight_Registration_.getSelectedIndex());
        String scaleLocationId = cmb_Scale_Location_Flight_Registration_.getItemAt(cmb_Scale_Location_Flight_Registration_.getSelectedIndex());
        int year = Integer.parseInt(txt_AÃ±o_Departure_Date_Flight_Registration_.getText());
        int month = Integer.parseInt(cmb_Month_Departure_Date_Flight_Registration_.getItemAt(cmb_Month_Departure_Date_Flight_Registration_.getSelectedIndex()));
        int day = Integer.parseInt(cmb_Day_Departure_Date_Flight_Registration_.getItemAt(cmb_Day_Departure_Date_Flight_Registration_.getSelectedIndex()));
        int hour = Integer.parseInt(cmb_Hour_Departure_Date_Flight_Registration_.getItemAt(cmb_Hour_Departure_Date_Flight_Registration_.getSelectedIndex()));
        int minutes = Integer.parseInt(cmb_Minute_Departure_Date_Flight_Registration_.getItemAt(cmb_Minute_Departure_Date_Flight_Registration_.getSelectedIndex()));
        int hoursDurationsArrival = Integer.parseInt(cmb_Hour_Duration_Flight_Registration_.getItemAt(cmb_Hour_Duration_Flight_Registration_.getSelectedIndex()));
        int minutesDurationsArrival = Integer.parseInt(cmb_Minute_Duration_Flight_Registration_.getItemAt(cmb_Minute_Duration_Flight_Registration_.getSelectedIndex()));
        int hoursDurationsScale = Integer.parseInt(MONTH4.getItemAt(MONTH4.getSelectedIndex()));
        int minutesDurationsScale = Integer.parseInt(DAY4.getItemAt(DAY4.getSelectedIndex()));

        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);

        Plane plane = null;
        for (Plane p : this.planes) {
            if (planeId.equals(p.getId())) {
                plane = p;
            }
        }

        Location departure = null;
        Location arrival = null;
        Location scale = null;
        for (Location location : this.locations) {
            if (departureLocationId.equals(location.getAirportId())) {
                departure = location;
            }
            if (arrivalLocationId.equals(location.getAirportId())) {
                arrival = location;
            }
            if (scaleLocationId.equals(location.getAirportId())) {
                scale = location;
            }
        }

        if (scale == null) {
            this.flights.add(new Flight(id, plane, departure, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival));
        } else {
            this.flights.add(new Flight(id, plane, departure, scale, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale));
        }

        this.cmb_Flight_Add_to_Flight_.addItem(id);
    }//GEN-LAST:event_btn_Flight_Registration_ActionPerformed

    private void btn_Update_Info_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Update_Info_ActionPerformed
    try {
        long id = Long.parseLong(txt_ID_Update_.getText());
        String nombre = txt_First_Name_Update_.getText();
        String apellido = txt_Last_Name_Update_.getText();
        LocalDate fechaNacimiento = LocalDate.of(
            Integer.parseInt(txt_Birthdate_Update_.getText()),
            MONTH5.getSelectedIndex() + 1,
            Integer.parseInt(DAY5.getItemAt(DAY5.getSelectedIndex()))
        );
        int codigoPais = Integer.parseInt(txt_Codigo_de_Pais_Update_.getText());
        long telefono = Long.parseLong(txt_Numero_de_Telefono_Update_.getText());
        String pais = txt_Country_Update_.getText();

        Pasajero pasajero = new Pasajero(id, nombre, apellido, fechaNacimiento, codigoPais, telefono, pais);

        BaseDatosSimulada baseDatos = new BaseDatosSimulada();
        ServicioPasajeros servicio = new ServicioPasajeros(baseDatos);
        PasajeroController controller = PasajeroController.getInstance(servicio);

        Response<Pasajero> response = controller.actualizarPasajero(pasajero);

        if (response.getCodigo() == 200) {
            JOptionPane.showMessageDialog(null, 
                response.getMensaje(), 
                "ActualizaciÃ³n Exitosa", 
                JOptionPane.INFORMATION_MESSAGE);
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(null, 
                response.getMensaje(), 
                "Error " + response.getCodigo(), 
                response.getCodigo() >= 500 ? JOptionPane.ERROR_MESSAGE : JOptionPane.WARNING_MESSAGE);
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, 
            "Formato numÃ©rico invÃ¡lido en los campos (ID, telÃ©fono o cÃ³digo deben ser nÃºmeros)", 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    } catch (DateTimeException e) {
        JOptionPane.showMessageDialog(null, 
            "Fecha invÃ¡lida: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(null, 
            e.getMessage(), 
            "Error de datos", 
            JOptionPane.WARNING_MESSAGE);
    }

    
        //passenger.setFirstname(firstname);
        //passenger.setLastname(lastname);
        //passenger.setBirthDate(birthDate);
        //passenger.setCountryPhoneCode(phoneCode);
        //passenger.setPhone(phone);
        //passenger.setCountry(country);
    }//GEN-LAST:event_btn_Update_Info_ActionPerformed
    
    private void limpiarCampos() {
        txt_ID_Update_.setText("");
        txt_First_Name_Update_.setText("");
        txt_Last_Name_Update_.setText("");
        txt_Birthdate_Update_.setText("");
        txt_Codigo_de_Pais_Update_.setText("");
        txt_Numero_de_Telefono_Update_.setText("");
        txt_Country_Update_.setText("");
    
    }
    
    private void btn_Add_Passenger_Flight_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Add_Passenger_Flight_ActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(txt_ID_Add_to_Flight_.getText());
        String flightId = cmb_Flight_Add_to_Flight_.getItemAt(cmb_Flight_Add_to_Flight_.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_btn_Add_Passenger_Flight_ActionPerformed

    private void btn_Delay_Flight_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Delay_Flight_ActionPerformed
        // TODO add your handling code here:
        String flightId = cmb_ID_Delay_Flight_.getItemAt(cmb_ID_Delay_Flight_.getSelectedIndex());
        int hours = Integer.parseInt(cmb_Hour_Delay_Flight_.getItemAt(cmb_Hour_Delay_Flight_.getSelectedIndex()));
        int minutes = Integer.parseInt(cmb_Minute_Delay_Flight_.getItemAt(cmb_Minute_Delay_Flight_.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        flight.delay(hours, minutes);
    }//GEN-LAST:event_btn_Delay_Flight_ActionPerformed

    private void btn_Refresh_My_Flights_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh_My_Flights_ActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(userSelect.getItemAt(userSelect.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) tbl_Lista_Vuelos_Show_my_Flights_.getModel();
        model.setRowCount(0);
        for (Flight flight : flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
        }
    }//GEN-LAST:event_btn_Refresh_My_Flights_ActionPerformed

    private void btn_Refresh_Passengers_List_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh_Passengers_List_ActionPerformed
        // TODO add your handling code here:
        /*DefaultTableModel model = (DefaultTableModel) tbl_Passengers_List_Show_all_Passemgers_.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }*/
        try {
        PasajeroController controller = PasajeroController.getInstance(
            new ServicioPasajeros(BaseDatosSimulada.getInstance())
        );
        Response<ArrayList<Pasajero>> response = controller.obtenerPasajerosOrdenados();
        if (response.getCodigo() == 200) {
            DefaultTableModel model = (DefaultTableModel) tbl_Passengers_List_Show_all_Passemgers_.getModel();
            model.setRowCount(0); 
            for (Pasajero pasajero : response.getDatos()) {
                model.addRow(new Object[]{
                    pasajero.getId(),
                    pasajero.getNombreCompleto(),      
                    pasajero.getFechaNacimiento(),
                    pasajero.getEdad(),                
                    pasajero.getTelefonoFormateado(),  
                    pasajero.getPais(),
                    pasajero.getCantidadVuelos()     
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, 
                "Error al cargar pasajeros: " + response.getMensaje(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, 
                "Error crÃ­tico: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_Refresh_Passengers_List_ActionPerformed

    private void btn_Refresh_All_Flights_List_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh_All_Flights_List_ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbl_Lista_Vuelos_Show_all_Flights_.getModel();
        model.setRowCount(0);
        for (Flight flight : this.flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_btn_Refresh_All_Flights_List_ActionPerformed

    private void btn_Refresh_Planes_List_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh_Planes_List_ActionPerformed
        // TODO add your handling code here:
        /*DefaultTableModel model = (DefaultTableModel) tbl_Lista_Aviones_Show_all_Planes_.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }*/
        try {
        // 1. Obtener instancia del controlador (igual que con pasajeros)
        AvionController controller = AvionController.getInstance(
            new ServicioAviones(BaseDatosSimulada.getInstance())
        );
        
        // 2. Obtener la lista de aviones ordenados
        Response<ArrayList<Avion>> response = controller.obtenerAvionesOrdenados();
        
        // 3. Verificar respuesta exitosa
        if (response.getCodigo() == 200) {
            DefaultTableModel model = (DefaultTableModel) tbl_Lista_Aviones_Show_all_Planes_.getModel();
            model.setRowCount(0); // Limpiar tabla
            
            // 4. Llenar la tabla con los datos
            for (Avion avion : response.getDatos()) {
                model.addRow(new Object[]{
                    avion.getId(),
                    avion.getMarca(),
                    avion.getModelo(),
                    avion.getCapacidadMaxima(),
                    avion.getAerolinea(),
                    avion.getVuelos().size() // NÃºmero de vuelos
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, 
                "Error al cargar aviones: " + response.getMensaje(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error crÃ­tico: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_Refresh_Planes_List_ActionPerformed

    private void btn_Refresh_All_Locations_List_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Refresh_All_Locations_List_ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbl_Ubicaciones_Show_all_Locations_.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_btn_Refresh_All_Locations_List_ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (! id.equals(userSelect.getItemAt(0))) {
                txt_ID_Update_.setText(id);
                txt_ID_Add_to_Flight_.setText(id);
            }
            else{
                txt_ID_Update_.setText("");
                txt_ID_Add_to_Flight_.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.setProperty("flatlaf.useNativeLibrary", "false");

        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirportFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DAY4;
    private javax.swing.JComboBox<String> DAY5;
    private javax.swing.JComboBox<String> MONTH4;
    private javax.swing.JComboBox<String> MONTH5;
    private javax.swing.JRadioButton administrator;
    private javax.swing.JButton btn_Add_Passenger_Flight_;
    private javax.swing.JButton btn_Airplane_Registration_;
    private javax.swing.JButton btn_Delay_Flight_;
    private javax.swing.JButton btn_Flight_Registration_;
    private javax.swing.JButton btn_Location_Registration_;
    private javax.swing.JButton btn_Passenger_Registration_;
    private javax.swing.JButton btn_Refresh_All_Flights_List_;
    private javax.swing.JButton btn_Refresh_All_Locations_List_;
    private javax.swing.JButton btn_Refresh_My_Flights_;
    private javax.swing.JButton btn_Refresh_Passengers_List_;
    private javax.swing.JButton btn_Refresh_Planes_List_;
    private javax.swing.JButton btn_Update_Info_;
    private javax.swing.JComboBox<String> cmb_Arrive_Location_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Day_Birthdate_Passenger_Registration_;
    private javax.swing.JComboBox<String> cmb_Day_Departure_Date_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Departure_Location_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Flight_Add_to_Flight_;
    private javax.swing.JComboBox<String> cmb_Hour_Delay_Flight_;
    private javax.swing.JComboBox<String> cmb_Hour_Departure_Date_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Hour_Duration_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_ID_Delay_Flight_;
    private javax.swing.JComboBox<String> cmb_Minute_Delay_Flight_;
    private javax.swing.JComboBox<String> cmb_Minute_Departure_Date_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Minute_Duration_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Month_Birthdate_Passenger_Registration_;
    private javax.swing.JComboBox<String> cmb_Month_Departure_Date_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Plane_Flight_Registration_;
    private javax.swing.JComboBox<String> cmb_Scale_Location_Flight_Registration_;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_Airline_Airplane_Registration_;
    private javax.swing.JLabel lbl_Airport_City_Local_Registration_;
    private javax.swing.JLabel lbl_Airport_Country_Location_Rgistration_;
    private javax.swing.JLabel lbl_Airport_ID_Location_Registration_;
    private javax.swing.JLabel lbl_Airport_Latitude_Flight_Registration_;
    private javax.swing.JLabel lbl_Airport_Longitude_Location_Registration_;
    private javax.swing.JLabel lbl_Airport_Name_Location_Registration_;
    private javax.swing.JLabel lbl_Arrive_Location_Flight_Registration_;
    private javax.swing.JLabel lbl_Birthdate_Passenger_Registration_;
    private javax.swing.JLabel lbl_Birthdate_Update_;
    private javax.swing.JLabel lbl_Brand_Airplane_Registration_;
    private javax.swing.JLabel lbl_Country_Passenger_Registartion_;
    private javax.swing.JLabel lbl_Country_Update_;
    private javax.swing.JLabel lbl_Departure_Date_Flight_Registration_;
    private javax.swing.JLabel lbl_Departure_Location_Flight_Registration_;
    private javax.swing.JLabel lbl_Duration_Flight_Registration_;
    private javax.swing.JLabel lbl_First_Name_Passenger_Registration_;
    private javax.swing.JLabel lbl_First_Name_Update_;
    private javax.swing.JLabel lbl_Flight_Add_to_Flight_;
    private javax.swing.JLabel lbl_Hours_Delay_Flight_;
    private javax.swing.JLabel lbl_ID_Add_to_Flight_;
    private javax.swing.JLabel lbl_ID_Airplane_Registration_;
    private javax.swing.JLabel lbl_ID_Delay_Flight_;
    private javax.swing.JLabel lbl_ID_Flight_Registration_;
    private javax.swing.JLabel lbl_ID_Passenger_Registration_;
    private javax.swing.JLabel lbl_ID_Update_;
    private javax.swing.JLabel lbl_Last_Name_Passenger_Registration_;
    private javax.swing.JLabel lbl_Last_Name_Update_;
    private javax.swing.JLabel lbl_Max_Capacity_Airplane_Registration_;
    private javax.swing.JLabel lbl_Minutes_Delay_Flight_;
    private javax.swing.JLabel lbl_Model_Airplane_Registration_;
    private javax.swing.JLabel lbl_Phone_Passenger_Registration_;
    private javax.swing.JLabel lbl_Phone_Update_;
    private javax.swing.JLabel lbl_Plane_Flight_Registration_;
    private javax.swing.JLabel lbl_Scale_Location_Flight_Registration_;
    private airport.PanelRound panelRound1;
    private airport.PanelRound panelRound2;
    private airport.PanelRound panelRound3;
    private javax.swing.JTable tbl_Lista_Aviones_Show_all_Planes_;
    private javax.swing.JTable tbl_Lista_Vuelos_Show_all_Flights_;
    private javax.swing.JTable tbl_Lista_Vuelos_Show_my_Flights_;
    private javax.swing.JTable tbl_Passengers_List_Show_all_Passemgers_;
    private javax.swing.JTable tbl_Ubicaciones_Show_all_Locations_;
    private javax.swing.JTextField txt_Airline_Airplane_Registration_;
    private javax.swing.JTextField txt_Airport_City_Location_Registration_;
    private javax.swing.JTextField txt_Airport_Country_Location_Registration_;
    private javax.swing.JTextField txt_Airport_ID_Location_Registration_;
    private javax.swing.JTextField txt_Airport_Latitude_Location_Registration_;
    private javax.swing.JTextField txt_Airport_Longitude_Location_Registration_;
    private javax.swing.JTextField txt_Airport_Name_Location_Registration_;
    private javax.swing.JTextField txt_AÃ±o_Departure_Date_Flight_Registration_;
    private javax.swing.JTextField txt_Birthdate_Passenger_Registration_;
    private javax.swing.JTextField txt_Birthdate_Update_;
    private javax.swing.JTextField txt_Brand_Airplane_Registration_;
    private javax.swing.JTextField txt_Codigo_de_Pais_Update_;
    private javax.swing.JTextField txt_Country_Passenger_Registration_;
    private javax.swing.JTextField txt_Country_Update_;
    private javax.swing.JTextField txt_First_Name_Update_;
    private javax.swing.JTextField txt_First_Name__Passenger_Registration_;
    private javax.swing.JTextField txt_ID_Add_to_Flight_;
    private javax.swing.JTextField txt_ID_Airplane_Registration_;
    private javax.swing.JTextField txt_ID_Flight_Registration_;
    private javax.swing.JTextField txt_ID_Passenger_Registration_;
    private javax.swing.JTextField txt_ID_Update_;
    private javax.swing.JTextField txt_Last_Name_Passenger_Registartion_;
    private javax.swing.JTextField txt_Last_Name_Update_;
    private javax.swing.JTextField txt_Max_Capacity_Airplane_Registration_;
    private javax.swing.JTextField txt_Model_Airplane_Registration_;
    private javax.swing.JTextField txt_Numero_de_Telefono_Update_;
    private javax.swing.JTextField txt_Phone_Code_Passenger_Registration_;
    private javax.swing.JTextField txt_Phone_Passenger_Registration_;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
